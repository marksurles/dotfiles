#!/usr/bin/env bash
set -euo pipefail

DOTFILES_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)"

# --- common, silent creds setup (used by bash, zsh, login shells) ---
SHELL_SNIPPET="$HOME/.shell_env/10-gcp-creds.sh"
mkdir -p "$HOME/.shell_env"
cat > "$SHELL_SNIPPET" <<'EOF'
# Silent GCP creds setup
: "${VERTEXAI_CREDENTIALS_PATH:=/workspaces/mp4prototype/mp4-search-prototype-fe11dd54b68d.json}"
export VERTEXAI_CREDENTIALS_PATH
export GOOGLE_APPLICATION_CREDENTIALS="$VERTEXAI_CREDENTIALS_PATH"

if [ -n "${GCP_SA_KEY_JSON_B64:-}" ] && [ ! -s "$VERTEXAI_CREDENTIALS_PATH" ]; then
  mkdir -p "$(dirname "$VERTEXAI_CREDENTIALS_PATH")" >/dev/null 2>&1 || true
  if command -v base64 >/dev/null 2>&1; then
    echo "$GCP_SA_KEY_JSON_B64" | base64 -d > "$VERTEXAI_CREDENTIALS_PATH" 2>/dev/null || true
    chmod 600 "$VERTEXAI_CREDENTIALS_PATH" 2>/dev/null || true
  fi
fi
EOF

# Ensure startup files source the snippet for interactive shells only
ensure_source() {
  local file="$1" guard="# DOTFILES_SHELL_ENV"
  touch "$file"
  grep -q "$guard" "$file" || cat >> "$file" <<EOF
$guard
case \$- in *i*) [ -r "$SHELL_SNIPPET" ] && . "$SHELL_SNIPPET";; esac
EOF
}
ensure_source "$HOME/.bashrc"
ensure_source "$HOME/.zshrc"
ensure_source "$HOME/.profile"

# Optional: link your aliases/configs (rename or adjust as needed)
ln -sfn "$DOTFILES_DIR/.bash_aliases" "$HOME/.bash_aliases" 2>/dev/null || true
ln -sfn "$DOTFILES_DIR/.gitconfig"    "$HOME/.gitconfig"    2>/dev/null || true

echo "Dotfiles install complete."
